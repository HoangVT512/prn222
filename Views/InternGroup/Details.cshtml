@model InternManagement.Models.ViewModels.InternGroupViewModel
@{
    ViewData["Title"] = "Group Details";
    Layout = "_Layout";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Group Details</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "AdminDashboard")">Dashboard</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "InternGroup")">Intern Groups</a></li>
        <li class="breadcrumb-item active">@Model.Group.Name</li>
    </ol>

    <div class="row mb-4">
        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-users me-1"></i>
                    Group Information
                </div>
                <div class="card-body">
                    <h5 class="card-title">@Model.Group.Name</h5>
                    <hr />

                    <div class="mb-3">
                        <h6 class="fw-bold">Field:</h6>
                        <p>@(string.IsNullOrEmpty(Model.Group.Field) ? "Not specified" : Model.Group.Field)</p>
                    </div>

                    <div class="mb-3">
                        <h6 class="fw-bold">Status:</h6>
                        <p>
                            @if (Model.Group.IsActive)
                            {
                                <span class="badge bg-success">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Inactive</span>
                            }
                        </p>
                    </div>

                    <div class="mb-3">
                        <h6 class="fw-bold">Created On:</h6>
                        <p>@Model.Group.CreatedAt.ToString("yyyy-MM-dd")</p>
                    </div>

                    <div class="mb-3">
                        <h6 class="fw-bold">Mentor:</h6>
                        @if (Model.Group.Mentor != null)
                        {
                            <div class="d-flex align-items-center">
                                <img src="@(string.IsNullOrEmpty(Model.Group.Mentor.Pfp) ? "/img/default-user.png" : Model.Group.Mentor.Pfp)"
                                     class="rounded-circle me-2" style="width: 40px; height: 40px;" alt="Mentor Profile Picture">
                                <div>
                                    <div>@Model.Group.Mentor.FullName</div>
                                    <div class="small text-muted">@Model.Group.Mentor.Email</div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <p>No mentor assigned</p>
                        }
                    </div>

                    <div class="d-flex justify-content-center mt-4">
                        <a href="@Url.Action("Edit", new { id = Model.Group.Id })" class="btn btn-primary me-2">
                            <i class="fas fa-edit me-1"></i> Edit Group
                        </a>
                        <a href="@Url.Action("ManageStudents", new { id = Model.Group.Id })" class="btn btn-success me-2">
                            <i class="fas fa-user-graduate me-1"></i> Manage Students
                        </a>
                        <a href="@Url.Action("Delete", new { id = Model.Group.Id })" class="btn btn-danger">
                            <i class="fas fa-trash me-1"></i> Delete
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <i class="fas fa-user-graduate me-1"></i>
                            Students in Group (@Model.Students.Count)
                        </div>
                        <a href="@Url.Action("ManageStudents", new { id = Model.Group.Id })" class="btn btn-sm btn-primary">
                            <i class="fas fa-user-plus me-1"></i> Manage Students
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.Students.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var student in Model.Students)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <img src="@(string.IsNullOrEmpty(student.Pfp) ? "/img/default-user.png" : student.Pfp)"
                                                         class="rounded-circle me-2" style="width: 30px; height: 30px;" alt="Student Profile Picture">
                                                    <div>@student.FullName</div>
                                                </div>
                                            </td>
                                            <td>@student.Email</td>
                                            <td>
                                                <a href="@Url.Action("Details", "StudentManagement", new { id = student.Id })" class="btn btn-sm btn-info">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            No students are assigned to this group yet.
                            <a href="@Url.Action("ManageStudents", new { id = Model.Group.Id })" class="alert-link">Assign students now</a>.
                        </div>
                    }
                </div>
            </div>

            <!-- Group Tasks -->
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <i class="fas fa-tasks me-1"></i>
                            Group Tasks (@Model.Tasks.Count)
                        </div>
                        <a href="@Url.Action("Create", "TaskManagement", new { groupId = Model.Group.Id })" class="btn btn-sm btn-primary">
                            <i class="fas fa-plus me-1"></i> Create Task
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    @if (Model.Tasks.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Title</th>
                                        <th>Status</th>
                                        <th>Deadline</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var task in Model.Tasks)
                                    {
                                        <tr>
                                            <td>@task.Title</td>
                                            <td>
                                                @switch (task.Status.Name)
                                                {
                                                    case "PENDING":
                                                        <span class="badge bg-secondary">Pending</span>
                                                        break;
                                                    case "IN_PROGRESS":
                                                        <span class="badge bg-primary">In Progress</span>
                                                        break;
                                                    case "COMPLETED":
                                                        <span class="badge bg-success">Completed</span>
                                                        break;
                                                    case "OVERDUE":
                                                        <span class="badge bg-danger">Overdue</span>
                                                        break;
                                                    case "NEED_REVIEW":
                                                        <span class="badge bg-warning">Need Review</span>
                                                        break;
                                                    case "APPROVED":
                                                        <span class="badge bg-info">Approved</span>
                                                        break;
                                                    case "REJECTED":
                                                        <span class="badge bg-danger">Rejected</span>
                                                        break;
                                                    default:
                                                        <span class="badge bg-secondary">@task.Status.Name</span>
                                                        break;
                                                }
                                            </td>
                                            <td>
                                                @{
                                                    var deadlineClass = task.Deadline < DateTime.Now ? "text-danger" : "";
                                                }
                                                <span class="@deadlineClass">@task.Deadline.ToString("yyyy-MM-dd")</span>
                                            </td>
                                            <td>
                                                <a href="@Url.Action("Details", "TaskManagement", new { id = task.Id })" class="btn btn-sm btn-info">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            No tasks have been assigned to this group yet.
                            <a href="@Url.Action("Create", "TaskManagement", new { groupId = Model.Group.Id })" class="alert-link">Create a task now</a>.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>