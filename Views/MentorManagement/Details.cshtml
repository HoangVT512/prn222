@model InternManagement.Models.ViewModels.MentorViewModel
@{
    ViewData["Title"] = "Mentor Details";
    Layout = "_Layout";
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Mentor Details</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "AdminDashboard")">Dashboard</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "MentorManagement")">Mentors</a></li>
        <li class="breadcrumb-item active">Details</li>
    </ol>

    <div class="row">
        <!-- Mentor Information -->
        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-user-tie me-1"></i>
                    Mentor Information
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        <img src="@(string.IsNullOrEmpty(Model.Mentor.Pfp) ? "/img/default-user.png" : Model.Mentor.Pfp)"
                             class="rounded-circle img-fluid" style="width: 150px;" alt="Mentor Profile Picture">
                        <h4 class="mt-3">@Model.Mentor.FullName</h4>
                        <p class="text-muted">@Model.Mentor.Email</p>
                    </div>

                    <div class="mb-3">
                        <h6 class="fw-bold">Username:</h6>
                        <p>@Model.Mentor.Username</p>
                    </div>

                    <div class="mb-3">
                        <h6 class="fw-bold">Email:</h6>
                        <p>@Model.Mentor.Email</p>
                    </div>

                    <div class="mb-3">
                        <h6 class="fw-bold">Phone:</h6>
                        <p>@(string.IsNullOrEmpty(Model.Mentor.Phone) ? "Not provided" : Model.Mentor.Phone)</p>
                    </div>

                    <div class="mb-3">
                        <h6 class="fw-bold">Joined On:</h6>
                        <p>@Model.Mentor.CreatedAt.ToString("yyyy-MM-dd")</p>
                    </div>

                    <div class="d-flex justify-content-center mt-4">
                        <a href="@Url.Action("Edit", new { id = Model.Mentor.Id })" class="btn btn-primary me-2">
                            <i class="fas fa-edit me-1"></i> Edit
                        </a>
                        <a href="@Url.Action("AssignGroups", new { id = Model.Mentor.Id })" class="btn btn-success me-2">
                            <i class="fas fa-users me-1"></i> Assign Groups
                        </a>
                        <a href="@Url.Action("Delete", new { id = Model.Mentor.Id })" class="btn btn-danger">
                            <i class="fas fa-trash me-1"></i> Delete
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Managed Groups -->
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-users me-1"></i>
                    Managed Groups (@Model.Groups.Count)
                </div>
                <div class="card-body">
                    @if (Model.Groups.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Group Name</th>
                                        <th>Field</th>
                                        <th>Created On</th>
                                        <th>Students</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var group in Model.Groups)
                                    {
                                        <tr>
                                            <td>@group.Name</td>
                                            <td>@group.Field</td>
                                            <td>@group.CreatedAt.ToString("yyyy-MM-dd")</td>
                                            <td>
                                                @Model.Students.Count(s => s.GroupId == group.Id)
                                            </td>
                                            <td>
                                                <a href="@Url.Action("Details", "InternGroup", new { id = group.Id })" class="btn btn-sm btn-info">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            This mentor is not currently assigned to any groups.
                            <a href="@Url.Action("AssignGroups", new { id = Model.Mentor.Id })" class="alert-link">Assign groups now</a>.
                        </div>
                    }
                </div>
            </div>

            <!-- Students Under Mentorship -->
            <div class="card">
                <div class="card-header">
                    <i class="fas fa-user-graduate me-1"></i>
                    Students Under Mentorship (@Model.Students.Count)
                </div>
                <div class="card-body">
                    @if (Model.Students.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Full Name</th>
                                        <th>Email</th>
                                        <th>Group</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var student in Model.Students)
                                    {
                                        <tr>
                                            <td>@student.FullName</td>
                                            <td>@student.Email</td>
                                            <td>
                                                @Model.Groups.FirstOrDefault(g => g.Id == student.GroupId)?.Name
                                            </td>
@*                                             <td>
                                                @switch (student.InternStatus)
                                                {
                                                    case "ACTIVE":
                                                        <span class="badge bg-success">Active</span>
                                                        break;
                                                    case "COMPLETED":
                                                        <span class="badge bg-info">Completed</span>
                                                        break;
                                                    case "DROPPED":
                                                        <span class="badge bg-danger">Dropped</span>
                                                        break;
                                                    case "ON_HOLD":
                                                        <span class="badge bg-warning">On Hold</span>
                                                        break;
                                                    default:
                                                        <span class="badge bg-secondary">Unknown</span>
                                                        break;
                                                }
                                            </td> *@
                                            <td>
                                                <a href="@Url.Action("Details", "StudentManagement", new { id = student.Id })" class="btn btn-sm btn-info">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            No students are currently assigned to this mentor's groups.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>