@model InternManagement.Models.Conversation
@{
    ViewData["Title"] = Model.IsGroup ? Model.Name : Model.ConversationMembers.FirstOrDefault(m => m.UserId != ViewBag.CurrentUserId)?.User?.FullName ?? "Chat";
    var currentUserId = ViewBag.CurrentUserId;
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card h-100">
                <!-- Chat Header -->
                <div class="card-header pb-0 d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <a href="@Url.Action("Index", "Messaging")" class="btn btn-sm btn-outline-secondary me-2">
                            <i class="fas fa-arrow-left"></i>
                        </a>
                        @if (Model.IsGroup)
                        {
                            <div class="avatar-group me-2" style="width: 40px;">
                                @foreach (var member in Model.ConversationMembers.Take(3))
                                {
                                    var index = Model.ConversationMembers.ToList().IndexOf(member);
                                    <img src="@(member.User.Pfp ?? "wwwroot/uploads/user-default.png")"
                                         alt="@member.User.FullName"
                                         class="avatar rounded-circle border border-white"
                                         style="width: 30px; height: 30px; object-fit: cover; margin-left: -@(index * 10)px;">
                                }
                            </div>
                            <div>
                                <h6 class="mb-0">@Model.Name</h6>
                                <p class="text-xs text-secondary mb-0">@Model.ConversationMembers.Count members</p>
                            </div>
                        }
                        else
                        {
                            var otherUser = Model.ConversationMembers.FirstOrDefault(m => m.UserId != currentUserId)?.User;
                            <img src="@(otherUser?.Pfp ?? "wwwroot/uploads/user-default.png")"
                                 alt="@otherUser?.FullName"
                                 class="avatar rounded-circle me-2"
                                 style="width: 40px; height: 40px; object-fit: cover;">
                            <div>
                                <h6 class="mb-0">@otherUser?.FullName</h6>
                                <p class="text-xs text-success mb-0">
                                    <i class="fas fa-circle me-1"></i>Online
                                </p>
                            </div>
                        }
                    </div>
                    <div class="dropdown">
                        <button class="btn btn-link text-secondary mb-0"
                                id="chatMenuDropdown"
                                data-bs-toggle="dropdown"
                                aria-expanded="false">
                            <i class="fas fa-ellipsis-v"></i>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="chatMenuDropdown">
                            <li>
                                <a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#membersModal">
                                    <i class="fas fa-users me-2"></i>View members
                                </a>
                            </li>
                            @if (Model.IsGroup)
                            {
                                <li>
                                    <a class="dropdown-item" href="#">
                                        <i class="fas fa-user-plus me-2"></i>Add members
                                    </a>
                                </li>
                                <li>
                                    <a class="dropdown-item text-danger" href="#">
                                        <i class="fas fa-sign-out-alt me-2"></i>Leave group
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>

                <!-- Chat Messages -->
                <div class="card-body p-3" id="chat-messages" style="height: 65vh; overflow-y: auto;">
                    @if (Model.Messages.Any())
                    {
                        @foreach (var message in Model.Messages)
                        {
                            bool isCurrentUserMessage = message.SenderId == currentUserId;

                            <div class="d-flex @(isCurrentUserMessage ? "justify-content-end" : "")">
                                <div class="@(isCurrentUserMessage ? "d-none" : "me-2")">
                                    @if (!isCurrentUserMessage)
                                    {
                                        <img src="@(message.Sender.Pfp ?? "wwwroot/uploads/user-default.png")"
                                             alt="@message.Sender.FullName"
                                             class="avatar rounded-circle"
                                             style="width: 36px; height: 36px; object-fit: cover;">
                                    }
                                </div>
                                <div class="message-bubble @(isCurrentUserMessage ? "sent" : "received") mb-2"
                                     style="max-width: 75%; padding: 10px 15px; border-radius: 18px;
                                            @(isCurrentUserMessage ? "background-color: #dcf8c6; border-top-right-radius: 5px;" : "background-color: #f0f2f5; border-top-left-radius: 5px;")">
                                    @if (Model.IsGroup && !isCurrentUserMessage)
                                    {
                                        <div class="text-xs font-weight-bold text-primary">@message.Sender.FullName</div>
                                    }
                                    <div class="message-content">
                                        @message.Content
                                    </div>
                                    <div class="text-end">
                                        <small class="text-xs text-secondary">
                                            @message.CreatedAt.ToString("HH:mm")
                                        </small>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center mt-5">
                            <i class="fas fa-comments fa-3x text-secondary mb-3"></i>
                            <p>No messages yet. Start the conversation!</p>
                        </div>
                    }
                </div>

                <!-- Chat Input -->
                <div class="card-footer">
                    <form id="messageForm" asp-action="SendMessage" method="post" class="d-flex align-items-center">
                        <input type="hidden" name="conversationId" value="@Model.Id">
                        <input type="text" name="content" class="form-control" placeholder="Type a message..." id="messageInput" autocomplete="off">
                        <button type="submit" class="btn btn-primary ms-2">
                            <i class="fas fa-paper-plane"></i>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Members Modal -->
<div class="modal fade" id="membersModal" tabindex="-1" aria-labelledby="membersModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="membersModalLabel">
                    @(Model.IsGroup ? "Group Members" : "Conversation Participants")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <ul class="list-group">
                    @foreach (var member in Model.ConversationMembers)
                    {
                        <li class="list-group-item d-flex align-items-center">
                            <img src="@(member.User.Pfp ?? "wwwroot/images/user-default.png")"
                                 alt="@member.User.FullName"
                                 class="avatar rounded-circle me-3"
                                 style="width: 40px; height: 40px; object-fit: cover;">
                            <div>
                                <h6 class="mb-0">@member.User.FullName</h6>
                                @if (member.UserId == currentUserId)
                                {
                                    <span class="badge bg-primary">You</span>
                                }
                            </div>
                        </li>
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Scroll to bottom of chat on page load
            var chatMessages = document.getElementById('chat-messages');
            if (chatMessages) {
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }

            // Handle message form submission with AJAX
            $('#messageForm').submit(function (e) {
                e.preventDefault();
                var content = $('#messageInput').val().trim();

                if (!content) return;

                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: $(this).serialize(),
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    success: function (response) {
                        // Add the message to the chat
                        var messageHtml = `
                                    <div class="d-flex justify-content-end">
                                        <div class="message-bubble sent mb-2"
                                             style="max-width: 75%; padding: 10px 15px; border-radius: 18px;
                                                    background-color: #dcf8c6; border-top-right-radius: 5px;">
                                            <div class="message-content">
                                                ${response.content}
                                            </div>
                                            <div class="text-end">
                                                <small class="text-xs text-secondary">
                                                    ${response.createdAt}
                                                </small>
                                            </div>
                                        </div>
                                    </div>
                                `;

                        $('#chat-messages').append(messageHtml);

                        // Clear input and scroll to bottom
                        $('#messageInput').val('');
                        chatMessages.scrollTop = chatMessages.scrollHeight;
                    },
                    error: function () {
                        alert('Failed to send message. Please try again.');
                    }
                });
            });
        });
    </script>
}