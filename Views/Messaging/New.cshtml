@{
    ViewData["Title"] = "New Conversation";
    var users = ViewBag.Users as List<InternManagement.Models.User>;
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header pb-0 d-flex align-items-center">
                    <a href="@Url.Action("Index", "Messaging")" class="btn btn-sm btn-outline-secondary me-3">
                        <i class="fas fa-arrow-left"></i>
                    </a>
                    <h6 class="mb-0">New Conversation</h6>
                </div>
                <div class="card-body">
                    <form asp-action="New" method="post">
                        <div class="mb-3">
                            <label for="isGroup" class="form-label">Conversation Type</label>
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" id="isGroup" name="isGroup">
                                <label class="form-check-label" for="isGroup">Group Chat</label>
                            </div>
                        </div>

                        <div id="groupNameContainer" class="mb-3" style="display: none;">
                            <label for="name" class="form-label">Group Name</label>
                            <input type="text" class="form-control" id="name" name="name" placeholder="Enter group name">
                            <div class="form-text">Required for group chats.</div>
                        </div>

                        <div class="mb-3">
                            <label for="selectedUsers" class="form-label">Select Participants</label>
                            <div class="card">
                                <div class="card-body p-0" style="max-height: 350px; overflow-y: auto;">
                                    <ul class="list-group list-group-flush">
                                        @if (users != null && users.Any())
                                        {
                                            foreach (var user in users)
                                            {
                                                <li class="list-group-item">
                                                    <div class="form-check">
                                                        <input class="form-check-input user-checkbox"
                                                               type="checkbox"
                                                               id="user-@user.Id"
                                                               name="selectedUsers"
                                                               value="@user.Id">
                                                        <label class="form-check-label w-100" for="user-@user.Id">
                                                            <div class="d-flex align-items-center">
                                                                <img src="@(user.Pfp ?? "wwwroot/uploads/user-default.png")"
                                                                     alt="@user.FullName"
                                                                     class="avatar rounded-circle me-3"
                                                                     style="width: 40px; height: 40px; object-fit: cover;">
                                                                <div>
                                                                    <h6 class="mb-0">@user.FullName</h6>
                                                                    <p class="mb-0 text-muted small">@user.Email</p>
                                                                    <span class="badge bg-secondary">@user.Role?.Name</span>
                                                                </div>
                                                            </div>
                                                        </label>
                                                    </div>
                                                </li>
                                            }
                                        }
                                        else
                                        {
                                            <li class="list-group-item text-center py-3">
                                                <p class="mb-0">No users available</p>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                            <div id="selectedCount" class="form-text mt-2">
                                0 users selected
                            </div>
                            @if (!ViewData.ModelState.IsValid && ViewData.ModelState[""]?.Errors.Count > 0)
                            {
                                <div class="text-danger mt-2">
                                    @ViewData.ModelState[""].Errors.First().ErrorMessage
                                </div>
                            }
                        </div>

                        <div class="d-flex justify-content-between">
                            <a href="@Url.Action("Index", "Messaging")" class="btn btn-secondary">Cancel</a>
                            <button type="submit" class="btn btn-primary" id="createBtn" disabled>
                                Create Conversation
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Toggle group name field when switching conversation type
            $('#isGroup').change(function () {
                if ($(this).is(':checked')) {
                    $('#groupNameContainer').slideDown();
                    $('#name').prop('required', true);
                } else {
                    $('#groupNameContainer').slideUp();
                    $('#name').prop('required', false);
                }

                updateSelectionRequirements();
            });

            // Handle user selection
            $('.user-checkbox').change(function () {
                updateSelectedCount();
                updateSelectionRequirements();
            });

            function updateSelectedCount() {
                const selectedCount = $('.user-checkbox:checked').length;
                $('#selectedCount').text(selectedCount + (selectedCount === 1 ? ' user selected' : ' users selected'));
            }

            function updateSelectionRequirements() {
                const isGroup = $('#isGroup').is(':checked');
                const selectedCount = $('.user-checkbox:checked').length;

                // For private chat, only one user can be selected
                if (!isGroup && selectedCount > 1) {
                    $('.user-checkbox:not(:checked)').prop('disabled', true);
                } else {
                    $('.user-checkbox').prop('disabled', false);
                }

                // Enable submit button if at least one user is selected
                // and group name is provided for group chats
                const groupNameProvided = isGroup ? $('#name').val().trim().length > 0 : true;
                $('#createBtn').prop('disabled', selectedCount === 0 || (isGroup && !groupNameProvided));

                if (isGroup) {
                    $('#name').on('input', function () {
                        const nameProvided = $(this).val().trim().length > 0;
                        $('#createBtn').prop('disabled', selectedCount === 0 || !nameProvided);
                    });
                }
            }
        });
    </script>
}