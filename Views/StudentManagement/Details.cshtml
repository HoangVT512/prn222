@model InternManagement.Models.ViewModels.StudentViewModel
@{
    ViewData["Title"] = "Student Details";
    Layout = "_Layout";
    var currentTime = "2025-03-25 03:28:24"; // Using provided current time
    var currentUser = "HoangVT512"; // Using provided current user
}

<div class="container-fluid px-4">
    <h1 class="mt-4">Student Details</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "AdminDashboard")">Dashboard</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "StudentManagement")">Students</a></li>
        <li class="breadcrumb-item active">@Model.Student.FullName</li>
    </ol>

    <div class="row">
        <!-- Student Information -->
        <div class="col-lg-4">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-user-graduate me-1"></i>
                    Student Information
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        <img src="@(string.IsNullOrEmpty(Model.Student.Pfp) ? "/img/default-user.png" : Model.Student.Pfp)"
                             class="rounded-circle img-fluid" style="width: 150px;" alt="Student Profile Picture">
                        <h4 class="mt-3">@Model.Student.FullName</h4>
                        <p class="text-muted">@Model.Student.Email</p>
                    </div>

                    <div class="mb-3">
                        <h6 class="fw-bold">Username:</h6>
                        <p>@Model.Student.Username</p>
                    </div>

                    <div class="mb-3">
                        <h6 class="fw-bold">Email:</h6>
                        <p>@Model.Student.Email</p>
                    </div>

                    <div class="mb-3">
                        <h6 class="fw-bold">Phone:</h6>
                        <p>@(string.IsNullOrEmpty(Model.Student.Phone) ? "Not provided" : Model.Student.Phone)</p>
                    </div>

                    <div class="mb-3">
                        <h6 class="fw-bold">Joined On:</h6>
                        <p>@(Model.Student.CreatedAt.ToString("yyyy-MM-dd") ?? "N/A")</p>
                    </div>

                    <div class="mb-3">
                        <h6 class="fw-bold">Group Assignment:</h6>
                        @if (Model.Group != null)
                        {
                            <p>
                                <a href="@Url.Action("Details", "InternGroup", new { id = Model.Group.Id })">
                                    @Model.Group.Name
                                </a>
                            </p>
                        }
                        else
                        {
                            <p class="text-muted">Not assigned to any group</p>
                        }
                    </div>

                    <div class="d-flex justify-content-center mt-4">
                        <a href="@Url.Action("Edit", new { id = Model.Student.Id })" class="btn btn-primary me-2">
                            <i class="fas fa-edit me-1"></i> Edit
                        </a>
                        <a href="@Url.Action("Delete", new { id = Model.Student.Id })" class="btn btn-danger">
                            <i class="fas fa-trash me-1"></i> Delete
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Task Progress -->
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-header">
                    <i class="fas fa-tasks me-1"></i>
                    Task Progress
                </div>
                <div class="card-body">
                    @if (Model.TaskProgress != null && Model.TaskProgress.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Task</th>
                                        <th>Deadline</th>
                                        <th>Progress</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var task in Model.TaskProgress)
                                    {
                                        <tr>
                                            <td>@task.Task.Title</td>
                                            <td>
                                                @{
                                                    var deadlineClass = task.IsOverdue && task.Task.Status.Name != "COMPLETED" && task.Task.Status.Name != "APPROVED" ? "text-danger" : "";
                                                    var daysLeft = (task.Task.Deadline - DateTime.Parse(currentTime)).Days;
                                                }
                                                <span class="@deadlineClass">
                                                    @task.Task.Deadline.ToString("yyyy-MM-dd")
                                                    @if (task.IsOverdue && task.Task.Status.Name != "COMPLETED" && task.Task.Status.Name != "APPROVED")
                                                    {
                                                        <span class="badge bg-danger ms-1">Overdue</span>
                                                    }
                                                    else if (daysLeft >= 0 && daysLeft <= 3 && task.Task.Status.Name != "COMPLETED" && task.Task.Status.Name != "APPROVED")
                                                    {
                                                        <span class="badge bg-warning ms-1">Soon</span>
                                                    }
                                                </span>
                                            </td>
                                            <td>
                                                <div class="progress">
                                                    <div class="progress-bar @(task.Progress >= 80 ? "bg-success" : task.Progress >= 50 ? "bg-primary" : "bg-warning")"
                                                         role="progressbar"
                                                         style="width: @task.Progress%"
                                                         aria-valuenow="@task.Progress"
                                                         aria-valuemin="0"
                                                         aria-valuemax="100">
                                                        @task.Progress%
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge bg-@(task.Task.Status.Name == "PENDING" ? "secondary" :
                                                                      task.Task.Status.Name == "IN_PROGRESS" ? "primary" :
                                                                      task.Task.Status.Name == "COMPLETED" ? "success" :
                                                                      task.Task.Status.Name == "OVERDUE" ? "danger" :
                                                                      task.Task.Status.Name == "NEED_REVIEW" ? "warning" :
                                                                      task.Task.Status.Name == "APPROVED" ? "info" : "secondary")">
                                                    @task.Task.Status.Name
                                                </span>
                                            </td>
                                            <td>
                                                <a href="@Url.Action("Details", "TaskManagement", new { id = task.Task.Id })" class="btn btn-sm btn-info">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            No tasks have been assigned to this student yet.
                        </div>
                    }
                </div>
            </div>

            <!-- Submissions History -->
            <div class="card">
                <div class="card-header">
                    <i class="fas fa-history me-1"></i>
                    Recent Activity
                </div>
                <div class="card-body">
                    @if (Model.TaskProgress != null && Model.TaskProgress.Any(t => t.LastSubmission != null))
                    {
                        <div class="timeline">
                            @foreach (var task in Model.TaskProgress.Where(t => t.LastSubmission != null).OrderByDescending(t => t.LastSubmission.SubmittedAt).Take(5))
                            {
                                <div class="timeline-item">
                                    <div class="timeline-date">@task.LastSubmission.SubmittedAt.ToString("yyyy-MM-dd HH:mm")</div>
                                    <div class="timeline-content">
                                        <h6 class="mb-1">@task.Task.Title</h6>
                                        <p class="mb-1">
                                            @if (string.IsNullOrEmpty(task.LastSubmission.Remarks))
                                            {
                                                <span class="text-muted">No remarks provided</span>
                                            }
                                            else
                                            {
                                                @(task.LastSubmission.Remarks.Length > 100 ? task.LastSubmission.Remarks.Substring(0, 100) + "..." : task.LastSubmission.Remarks)
                                            }
                                        </p>
                                        <div class="d-flex justify-content-between mt-2">
                                            <span class="badge bg-@(task.LastSubmission.Status == "IN_PROGRESS" ? "primary" :
                                                                 task.LastSubmission.Status == "COMPLETED" ? "success" :
                                                                 task.LastSubmission.Status == "NEED_REVIEW" ? "warning" : "secondary")">
                                                @task.LastSubmission.Status
                                            </span>
                                            <a href="@Url.Action("Details", "TaskManagement", new { id = task.Task.Id })" class="btn btn-sm btn-outline-primary">
                                                View Details
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            No recent activity found for this student.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .timeline {
        position: relative;
        padding-left: 2rem;
        margin-left: 0.5rem;
        border-left: 2px solid #e9ecef;
    }

    .timeline-item {
        position: relative;
        padding-bottom: 1.5rem;
    }

    .timeline-date {
        font-size: 0.85rem;
        color: #6c757d;
        margin-bottom: 0.5rem;
    }

    .timeline-content {
        padding: 1rem;
        background-color: #f8f9fa;
        border-radius: 0.25rem;
    }

    .timeline-item:before {
        content: "";
        position: absolute;
        left: -1.63rem;
        top: 0.25rem;
        width: 1rem;
        height: 1rem;
        border-radius: 50%;
        background-color: #4e73df;
        border: 2px solid white;
    }
</style>